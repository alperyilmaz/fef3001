{
  "hash": "ddd897522b7b0d55ccf3f3bb83a6a429",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Değerlendirme Ölçütleri\"\nsubtitle: \"FEF3001 Yapay zekaya giriş - Ders3\"\nauthor: \"Alper Yılmaz\"\ndate: 2024-07-11\nformat:\n  revealjs:\n    chalkboard: true\n    css: custom.css\n    smaller: true\n    scrollable: true\n    controls: true\n    touch: true\n    history: false\n    progress: true\n    slide-number: c/t\ntypora-copy-images-to: images\n---\n\n\n## Değerlendirme ölçütleri / Performance Metrics\n\n* Sınıflandırma değerlendirme (Classification)\n* Regresyon değerlendirme (Regression)\n\n\n\n## Sınıflandırma ve Regresyon (Classification vs regression)\n\n![](attachments/1677785069046.png)\n\n[Source](https://www.linkedin.com/pulse/aipart3regression-vs-classification-models-arnab-mukherjee)\n\n##\n\n![](attachments/Screenshot-2023-05-02-at-9.57.48-AM.png)\n\n[Source](https://acua.qcri.org/blog/comparing-the-results-classification-vs-regression-models-in-machine-learning/)\n\n## Sınıflandırma ve Regresyon\n\n![](attachments/regression-data-vs-classification-data.png)\n\n[Source](https://www.sharpsightlabs.com/blog/regression-vs-classification/)\n\n##  \n\n![](attachments/1CbxJX9DXjxx17X4NupHrtw.webp)\n\n[Source](https://medium.com/@Nichu55/understanding-the-difference-between-regression-and-classification-c96862d7f4b0)\n\n## Fit\n\n![](attachments/1718273106637.svg)\n\n[Source](https://www.mathworks.com/discovery/overfitting.html)\n\n## Training\n\n![](attachments/2_train-test-split.jpg)\n\n[Source](https://builtin.com/data-science/train-test-split)\n\n## Training / Test\n\n![](attachments/1_train-test-split_0.jpg)\n\n[Source](https://builtin.com/data-science/train-test-split)\n\n\n\n## Classification Performance Metrics\n\nBir Sınıflandırma modeli oluşturulduktan sonra bu model ile yapılan tahminlerin ne kadar doğru olduğuna dair değerlendirme yapılması gereklidir\\.\n\nAşağıda verilen confusion matrix \\(karşılaştırma matrisi\\) bir sınıflandırma modeline dair gerçekleşen durumları ve bu durumlara dair tahminleri verilmiştir\\.\n\n|                     |         | Actual (Gerçek) |                |\n| :-----------------: | :-----: | :-------------: | :------------: |\n|                     |         |  True (Doğru)   | False (Yanlış) |\n| Prediction (Tahmin) | Pozitif |       TP        |       FP       |\n|                     | Negatif |       FN        |       TN       |\n\nTP : True Positive, FP : False Positive, FN : False Negative, TN : True Negative\n\nTrue ve false değeri bu modele dair gerçek sonuçları\\, positive ve negative ise modele dair tahminleri göstermektedir\\.\n\n## Classification Performance Metrics\n\nTümör ve Hasta örnekleri ele alırsak, Normal örnekler *negatif* olarak, Tümör örnekleri de *pozitif* olarak değerlendirilebilir.\n\n<br>\n\nTP : Gerçekte Tümör olan hastayı (true/pozitif) Tümör olarak tahmin etmek (pozitif).\n\n<br>\n\nFP : Gerçekte Normal olan örneği (false/negatif) Tümör olarak tahmin etmek (pozitif). — > Type 1 Error\n\n<br>\n\nFN : Gerçekte Tümor olan örneği (true/pozitif) Normal olarak tahmin etmek (negatif). — > Type 2 Error\n\n<br>\n\nTN : Gerçekte Normal olan örneği (false/negatif) Normal olarak tahmin etmek (negatif).\n\n## Metrics\n\n**Accuracy**  *(Doğruluk)* : Doğru tahminlerin toplam veri kümesine oranıdır.\n\n**Precision** *(Kesinlik)*: Pozitif olarak tahmin edilen verilerin kaçının gerçekten pozitif olduğunu gösterir.\n\n**Recall or Sensitivity**  *(Duyarlılık)*: Geliştirilen modelin pozitif olanların kaçını yakaladığını  gösterir.\n\n**F1 Score** *(F1 Skoru)*: F1 score, precision ve recall değerlerinin harmonik ortalamasıdır. Sınıf dağılımı benzer olduğunda accuracy kullanılabilirken, dengesiz veri setleri söz konusu olduğunda F1 skor daha iyi bir metriktir.\n\n**ROC Curve** *(ROC Eğrisi)*: Yanlış pozitif oranı ve gerçek pozitif oranı göz önünde bulundurarak x ekseninde ve y ekseninde 0'dan 100'e kadar olan değerlerin üzerinde bir eğri oluşturulur. Bu eğrinin altında kalan alana Area Under Curve (AUC) adı verilir. Bu alanın büyük olması modelin başarılı olduğunu gösterir. Grafikte yer alan mavi çizgi; ne kadar geniş bir alan kaplıyorsa modelin tahmin başarısı o kadar yüksek, ortadaki kesikli çizgiye ne kadar yakınsa modelin başarı oranı o kadar düşüktür.\n\n## ROC Curve\n\n![](images/hafta2_De%C4%9Ferlendirme%C3%96l%C3%A7%C3%BCtleri0.png)\n\n## Why too many metrics?\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\nNeden birden fazla metrik kullanılıyor, bir örnek ile görelim. Yandaki durum için, 8 Normal ve 2 Tümör olan bir durumda, her örnek için\nNormal diye tahminde bulunursak. True Negatif (TN) sayısı 8 ve False Negatif (FN) sayısı ise 2 olmaktadır.\n\nBu durumda, doğruluk, accuracy\n\nACC = (TP + TN) / (TP + FP + TN + FN)\n\nformülünden dolayı 8 / 10 = 0.8 yani %80 olarak hesaplanmaktadır.\n\nFakat, Duyarlılık/Sensitivity\n\nSENS = TP / (TP + FN)\n\nformülünden 0 çıkmaktadır.\n:::\n\n::: {.column width=\"40%\"}\n\n| Actual Label  | Prediction |\n|--------|------------|\n| Tumor | Normal     |\n| Tumor  | Normal      |\n| Normal | Normal      |\n| Normal  | Normal     |\n| Normal | Normal     |\n| Normal  | Normal      |\n| Normal | Normal      |\n| Normal  | Normal     |\n| Normal | Normal     |\n| Normal  | Normal      |\n\n:::\n::::\n\n\n## Example\n\n100 kişilik bir çalışmada, 25 Tümör hastası ve 75 Normal birey bulunmaktadır. Normal (negatif) olan 70 kişi Normal olarak tahmin edilmştir (TN: True Negatif). 5 kişi Normal olduğu halde Tümör olarak tahmin edilmiştir (FP: False pozitif).  Gerçekte Tümör olan 15 kişi Tümör olarak tahmin edilmiştir (TP: True pozitif). Son olarak, 10 kişi Tümör olduğu halde Normal olarak tahmin edilmiştir (FN: False negatif). Bu duruma göre Confusion Matrix aşağıdaki gibi hesaplanacaktır.  \n\n|        |         | Actual |         |\n| :----: | :-----: | :----: | :-----: |\n|        |         |  True  |  False  |\n| Tahmin | Pozitif | TP (15) | FP (5)  |\n|        | Negatif | FN (10) | TN (70) |\n\n## Example\n\nBu durumda, \n\nDoğruluk (Accuracy) ACC = (TP + TN) / (TP + TN + FN + FP) = 0.85\n \nDuyarlılık (Sensitivity) SENS = TP / (TP + FN) = 0.60\n\nKesinlik (Precision) PREC = TP / (TP + FP) = 0.75\n\nF1 Skor = 2 x (PREC x SENS) / (PREC + SENS) = 0.6667 \n\n## Summary\n\n![](attachments/1QAlFTwg8Q1qbKSIXYU5eew.png)\n\n[Source](https://python.plainenglish.io/demystifying-performance-metrics-illuminating-machine-learning-model-evaluation-in-8977e10e87e9)\n\n## Python code\n\n::: {#0b9db271 .cell execution_count=1}\n``` {.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\n\nactual    = [1, 0, 1, 1, 0, 0, 1, 0, 1, 1]\npredicted = [0, 1, 1, 1, 1, 0, 1, 1, 0, 1]\n\nprint(\"\\nConfusion matrix\")\nconf_mat = confusion_matrix(actual, predicted) \n\nprint(conf_mat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nConfusion matrix\n[[1 3]\n [2 4]]\n```\n:::\n:::\n\n\n## Regression Performance Metrics\n\nFollowing metrics can be used to measure the performance of regression model output.\n\n* Mean Error (ME)\n* Mean Absolute Error (MAE)\n* Mean Squared Error (MSE)\n* Root Mean Squared Error (RMSE)\n\nThere are much more advanced metrics but we'll learn only essental ones\n\n\n\n## Mean Error (ME)\n\n$$ \\text{ME} = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i) $$\n\n$y_i$:  Actual value, $\\hat{y}_i$: predicted value, n: number of observations\n\n## Mean Absolute Error (MAE)\n\nAdding negative results is not right when using ME. Let's take care of it.\n\n$$ \\text{MAE} = \\frac{1}{n} \\sum_{i=1}^{n} |y_i - \\hat{y}_i| $$\n\n## Mean Squared Error (MSE)\n\n$$ \\text{MSE} = \\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2 $$\n\nPlease note that squaring the error with punish the model more. Also, squaring a difference will take care of negative sign.\n\n## Root Mean Squared Error (RMSE)\n\n$$ \\text{RMSE} = \\sqrt{\\frac{1}{n} \\sum_{i=1}^{n} (y_i - \\hat{y}_i)^2} $$\n\n",
    "supporting": [
      "ders3_files"
    ],
    "filters": [],
    "includes": {}
  }
}